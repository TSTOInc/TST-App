import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "@/components/ui/sonner";
import { AppSidebar } from "@/components/app-sidebar";
import { ThemeProvider } from "@/components/theme-provider";
import { SiteHeader } from "@/components/site-header";
import { SidebarInset, SidebarProvider } from "@/components/ui/sidebar";

import { auth0 } from "@/lib/auth0";
import { redirect } from "next/navigation";
import { getToken } from "@/lib/getToken";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "TST App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // Fetch the user session
  const session = await auth0.getSession();
  // Redirect to login if no session
  if (!session) {
    redirect("/auth/login");
  }
  const user = session.user
  const orgId = user.org_id

  console.log("Org ID: ", orgId)

  // Optional: redirect if user not in an org
  //if (!orgId) redirect("/no-organization")

  const token = await getToken();

  const res = await fetch(`https://dev-xmw2ajtl2wpc1npq.us.auth0.com/api/v2/organizations/${orgId}`, {
    headers: {
      Authorization: `Bearer ${token}`,
    },
    cache: "no-store",
  })

  const organization = await res.json()
  console.log("Organization: ", organization)

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          enableSystem
          disableTransitionOnChange
        >
          <SidebarProvider
            
            style={
              {
                "--sidebar-width": "calc(var(--spacing) * 72)",
                "--header-height": "calc(var(--spacing) * 12)",
              } as React.CSSProperties
            }
          >
            <AppSidebar
            variant="inset"
              user={user}
              organization={{
                id: organization.id,
                name: organization.display_name || organization.name,
              }}
            />
            <SidebarInset>
              <SiteHeader />
              {children}
              <Toaster richColors position="top-center" />
            </SidebarInset>
          </SidebarProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
